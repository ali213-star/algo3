// C++ implementation for dot product
// and cross product of two vector.
#include <bits/stdc++.h>
#define n 3
 
using namespace std;
 
// Function that return
// dot product of two vector array.
int dotProduct(int V1 [], int V2[])
{
 
    int product = 0;
 
    // Loop for calculate cot product
    for (int i = 0; i < n; i++)
 
        product = product + V1[i] * V2[i];
    return product;
}
 
// Function to find
// cross product of two vector array.
void crossProduct(int V1[], int V2[], int cross_P[])
 
{
 
    cross_P[0] = V1[1] * V2[2] - V1[2] * V2[1];
    cross_P[1] = V1[2] * V2[0] - V1[0] * V2[2];
    cross_P[2] = V1[0] * V2[1] - V1[1] * V2[0];
}
 
// Driver function
int main()
{
 
    int V1[] = { 3, -5, 4 };
    int V2[] = { 2, 6, 5 };
    int cross_P[n];
 
    // dotProduct function call
    cout << "Dot product:";
    cout << dotProduct(V1, V2) << endl;
 
    // crossProduct function call
    cout << "Cross product:";
    crossProduct(V1, V2, cross_P);
 
    // Loop that print
    // cross product of two vector array.
    for (int i = 0; i < n; i++)
 
        cout << cross_P[i] << " ";
    return 0;
}